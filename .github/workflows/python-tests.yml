name: Python Tests

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.1", "3.8", "3.9", "3.10", "3.11"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-html pytest-cov
    
    - name: Run tests with pytest
      run: |
        python -m pytest src/tests/ -v \
          --cov=src \
          --junitxml=junit/test-results-${{ matrix.python-version }}.xml \
          --html=reports/test-report-${{ matrix.python-version }}.html \
          --self-contained-html \
          --cov-report=xml:reports/coverage-${{ matrix.python-version }}.xml \
          --cov-report=html:reports/coverage-html-${{ matrix.python-version }}
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-py${{ matrix.python-version }}
        path: |
          junit/test-results-${{ matrix.python-version }}.xml
          reports/test-report-${{ matrix.python-version }}.html
        retention-days: 30
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports-py${{ matrix.python-version }}
        path: |
          reports/coverage-${{ matrix.python-version }}.xml
          reports/coverage-html-${{ matrix.python-version }}
        retention-days: 30
    
    - name: Upload pytest cache (for test re-runs)
      uses: actions/upload-artifact@v4
      with:
        name: pytest-cache-py${{ matrix.python-version }}
        path: .pytest_cache/
        retention-days: 7

  coverage-summary:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download coverage artifacts
      uses: actions/download-artifact@v4
      with:
        path: coverage-artifacts
    
    - name: Display coverage summary
      run: |
        echo "Coverage Reports Summary:"
        find coverage-artifacts -name "*.xml" -type f | while read file; do
          echo "Coverage file: $file"
          if command -v python &> /dev/null; then
            python -c "
            import xml.etree.ElementTree as ET
            try:
                tree = ET.parse('$file')
                root = tree.getroot()
                line_rate = root.get('line-rate', 'N/A')
                branch_rate = root.get('branch-rate', 'N/A')
                print(f'  Line Coverage: {float(line_rate)*100:.2f}%')
                print(f'  Branch Coverage: {float(branch_rate)*100:.2f}%')
            except Exception as e:
                print(f'  Error parsing XML: {e}')
            "
          fi
          echo "---"
        done

  test-summary:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download test artifacts
      uses: actions/download-artifact@v4
      with:
        path: test-artifacts
    
    - name: Display test summary
      run: |
        echo "Test Results Summary:"
        find test-artifacts -name "*.xml" -type f | while read file; do
          echo "Test results: $file"
          if command -v python &> /dev/null; then
            python -c "
            import xml.etree.ElementTree as ET
            try:
                tree = ET.parse('$file')
                root = tree.getroot()
                tests = root.get('tests', 'N/A')
                failures = root.get('failures', 'N/A')
                errors = root.get('errors', 'N/A')
                print(f'  Tests: {tests}, Failures: {failures}, Errors: {errors}')
            except Exception as e:
                print(f'  Error parsing XML: {e}')
            "
          fi
          echo "---"
        done